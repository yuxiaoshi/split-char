#coding:utf-8
import sys
import re

with open(sys.argv[1]) as f1:

    for idx,line in enumerate(f1):
        line = line.strip().decode('utf-8')

        if line == '':
            continue
        elif line != '':
            line = line.split('  ',1)[1]

        # clean [] in line
        if ('[' or ']') in line: # if there is any ner in [.*]ns/nt/nr 
            #print line
            ner = re.findall('\[.*?\](?:ns|nr|nt|nx|nz)',line)  #compile for reg exp
            for item in ner:
                word,smp = item[:-2],item[-2:]  # word text, ner cat
                if smp in ('ns','nt','nr'):
                    word = word.replace('[','').replace(']','') # replace '\[\]'
                    w_s = word.split()
                    ''' 
                    for idx,e in enumerate(w_s):
                        if idx == 0:
                            w_s[0] = e.split('/')[0] + '/B-' + smp
                        else:
                            w_s[idx] = e.split('/')[0] + '/I-' + smp
                    ''' 
                    s = ' '.join(e.split('/')[0] + '/' + smp for e in w_s)

                    line = line.replace(item,s,1)
                else:
                    line = line.replace(']' + smp,'').replace('[','')
            #print line
        
        word_list = line.split()
        res_list = []
        for item in word_list:
            print item
            word,smp = item.split('/')
            if len(word)>1:
                for w in word:
                    res_list.append(w + ' ' + smp)
            else:
                res_list.append(word + ' ' + smp)
        res = '/'.join(e for e in res_list)
        #print res

        for idx1,item in enumerate(res_list):
            #print item
            word,cat = item.split()
            
            if cat == 'ns':
                smp = 'LOC'
            elif cat == 'nr':
                smp = 'PER'
            elif cat == 'nt':
                smp = 'ORG'
            else:
                smp = cat

            if smp not in ('LOC','PER','ORG'):
                res_list[idx1] = word + ' O'  
            elif (smp in ('LOC','PER','ORG')) and (idx1==0):
                res_list[idx1] = word + ' B-' + smp
            elif (smp in ('LOC','PER','ORG')) and (smp not in res_list[idx1-1].split()[1]):
                res_list[idx1] = word + ' B-' + smp
            elif (smp in ('LOC','PER','ORG')) and (smp in res_list[idx1-1].split()[1]):
                res_list[idx1] = word + ' I-' + smp

        for item in res_list:
            f2.write((item+'\n').encode('utf-8'))
        f2.write('\n')
            
