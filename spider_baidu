#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import os, sys
from urllib import request, parse
import time, random
import json

Headers = {
	'Host': 'fanyi.baidu.com',
	'Proxy-Connection': 'keep-alive',
	# 'Content-Length': '63',
	'Origin': 'http://fanyi.baidu.com',
	'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36',
	'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
	'Accept': '*/*',
	'X-Requested-With': 'XMLHttpRequest',
	'Accept-Language': 'zh-CN,zh;q=0.8,en;q=0.6'
}

def GetHTML(url, post_data):
	proxy = request.ProxyHandler({'http':'109.105.1.52:8080'})
	opener = request.build_opener(proxy)
	request.install_opener(opener)
	req = request.Request(url, headers = Headers, data = post_data)
	page = request.urlopen(req, timeout = 5)
	html = page.read()
	return html

def GetWords(fp):
	reader = open(fp, 'rb')
	words = []
	for line in reader:
		word = line.decode('UTF-8').strip().split('\t')[0]
		words.append(word)
	reader.close()
	words = words[::-1]
	return words

def Spider():
	dir_path = 'src/key_chinese'
	try:
		os.mkdir(dir_path)
	except Exception as e:
		pass
	fp = 'src/中文词集_all'
	words = GetWords(fp)
	exist_words = set([])
	for file_name in os.listdir(dir_path):
		exist_words.add(file_name)
	print(len(words), len(exist_words))
	idx = 0
	url = 'http://fanyi.baidu.com/v2transapi'
	while len(words)!=0:
		word = words.pop()
		if word in exist_words:
			continue
		idx += 1
		post_data = "from=zh&to=en&query={}&transtype=realtime&simple_means_flag=3".format(word)
		post_data = post_data.encode('UTF-8')
		print('{}\t{}\t'.format(idx, word), end = ' ')
		try:
			html = GetHTML(url, post_data)
			wfp = os.path.join(dir_path, word)
			writer = open(wfp, 'wb')
			writer.write(html)
			writer.close()
			print('Success!')
			time.sleep(1*random.random()+1)
		except Exception as e:
			print('Failed! {}'.format(str(e)))
			words.insert(0, word)
		if idx>200000:
			break
	return 0

def main():
	Spider()
	return 0

if __name__ == '__main__':
	main()
